# -*- coding: utf-8 -*-
"""Disease Alzheimer Classification Through Support Vector Machine (SVM).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OqoYZC5FViodzRnl5E0yB4ioeqhhPuIZ
"""

#imports
import os
import numpy as np
import cv2
from google.colab.patches import cv2_imshow
import matplotlib.pyplot as plt
import pickle
import random
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC

from google.colab import drive
drive.mount('/content/drive')

#import the data
dir = '/content/drive/MyDrive/SVClassifier/Dataset-DA'

#adjust the data
categories = ['Demented', 'NoDemented']

data = []

for category in categories:
  path = os.path.join(dir, category)
  label = categories.index(category)

  for img in os.listdir(path):
    imgpath = os.path.join(path, img)
    da_img = cv2.imread(imgpath, 0)
    image = np.array(da_img).flatten()

    data.append([image, label])

#saving data
pick_in = open('data1.pickle', 'wb')
pickle.dump(data, pick_in)
pick_in.close()

#loading data
pick_in = open('data1.pickle', 'rb')
data = pickle.load(pick_in)
pick_in.close()

#sorting the data at random
random.shuffle(data)
features = []
labels = []

for feature, label in data:
  features.append(feature)
  labels.append(label)

#defining the training model
xtrain, xtest, ytrain, ytest = train_test_split(features, labels, test_size=0.25)

model = SVC(C=1, kernel = 'poly', gamma='auto')
model.fit(xtrain, ytrain)

prediction = model.predict(xtest)
accuracy = model.score(xtest, ytest)

#print result
print('Accuracy: ', accuracy)
print('Prediction is: ', categories[prediction[0]])

da_predict = xtest[0].reshape(208,176)
plt.imshow(da_predict, cmap='gray')
plt.show()